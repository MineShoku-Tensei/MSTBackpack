name: Build

on:
    pull_request:
        branches:
            - master
        types:
            - closed
    workflow_dispatch:
        inputs:
            release:
                description: "Create a release"
                required: false
                default: false
                type: boolean
            deploy:
                description: "Deploy Maven"
                required: false
                default: false
                type: boolean

permissions:
    contents: read

jobs:
    build:
        if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
        permissions:
            contents: write
            packages: read
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get_version.outputs.version }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0  # needed for git info plugins like git-commit-id-plugin

            - name: Set up Java 21
              uses: actions/setup-java@v4
              with:
                  java-version: '21'
                  distribution: 'temurin'
                  cache: maven

            - name: Extract project version from POM
              id: get_version
              uses: dostonhamrakulov/maven-artifact-version-extractor@v1.0
              with:
                  file_path: ${{ github.workspace }}/pom.xml

            - name: Maven settings for GitHub
              uses: s4u/maven-settings-action@v4.0.0

            - name: Build with Maven
              run: mvn -B clean package

            - name: Find JAR
              id: jar
              run: |
                  count=$(find . -maxdepth 1 -type f -name '*.jar' | wc -l)
                  if [ "$count" -ne 1 ]; then
                    echo "Error: expected 1 JAR file, found $count"
                    exit 1
                  fi
                  jar_file=$(find . -maxdepth 1 -type f -name '*.jar' | head -n 1)
                  if [ "$GITHUB_REF" = "refs/heads/master" ]; then
                    jar_file_master="${jar_file%-*.jar}.jar"
                    mv -f "$jar_file" "$jar_file_master"
                    jar_file="$jar_file_master"
                  fi
                  echo "jar_file=$jar_file" >> "$GITHUB_OUTPUT"

            - name: Upload JAR as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: build-${{ github.ref_name }}
                  path: ${{ steps.jar.outputs.jar_file }}
                  overwrite: false
                  if-no-files-found: error
                  retention-days: 1

    release:
        if: |
            github.ref == 'refs/heads/master' &&
            (
                (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
                (github.event_name == 'workflow_dispatch' && inputs.release == true)
            )
        permissions:
            contents: write
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Check if release already exists
              id: check_release
              uses: action-pack/tag-exists@v1
              with:
                  tag: "v${{ needs.build.outputs.version }}"

            - name: Fail if version already released
              if: steps.check_release.outputs.exists == 'true'
              run: |
                  echo "Release tag v${{ needs.build.outputs.version }} already exists"
                  exit 1

            - name: Download built artifact
              uses: actions/download-artifact@v4
              with:
                  name: build-master

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: "v${{ needs.build.outputs.version }}"
                  name: "v${{ needs.build.outputs.version }}"
                  body: |
                      ðŸš€ **v${{ needs.build.outputs.version }}**

                  files: "*.jar"
                  overwrite_files: false
                  fail_on_unmatched_files: true
                  generate_release_notes: true
